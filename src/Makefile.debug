#for static analysis, use 
#scan-build-14 --use-cc=/usr/bin/clang-14 make
#and setup the compiler as clang

RDRND=-mrdrnd

#debugging
CC=clang-14
#Silence selected warnings:
#-Wno-padded
#It is not clear why I should care about padding the compiler is adding.
#-Wno-bad-function-cast
#I don't see a problem with the construction (int)floor(1.3) and this is used here.
#-Wno-gnu-statement-expression
#GCC MACRO extensions are used (clang supports these)
MUTE=-Wno-padded -Wno-bad-function-cast -Wno-gnu-statement-expression

#For general debugging (e.g., with static analyzer)
#standard debug
DEBUGCFLAGS=-O2
#DEBUGLDFLAGS=-flto -lprofiler
DEBUGLDFLAGS=-flto
#undefined flag and ASAN
#DEBUGCFLAGS=-O1 -fsanitize=address -fsanitize=undefined
#DEBUGLDFLAGS=-fsanitize=address -fsanitize=undefined
#For sanitize memory
#DEBUGCFLAGS=-O1 -fsanitize-memory-track-origins -fsanitize=memory
#DEBUGLDFLAGS=-fsanitize=memory
#for thread san
#DEBUGCFLAGS=-O1 -fsanitize=thread
#DEBUGLDFLAGS=-fsanitize=thread

CFLAGS=-Wall -Wextra -Weverything -march=native -mfpmath=sse -msse2 -msse4.2 -O2 -g -fno-omit-frame-pointer -Wformat -Wformat-security -Werror=format-security -fno-optimize-sibling-calls -Werror $(RDRND) $(MUTE) -DUADDL_OVERFLOW -fdenormal-fp-math=ieee $(DEBUGCFLAGS) -flto
LDFLAGS=$(DEBUGLDFLAGS)

include Makefile.rules
